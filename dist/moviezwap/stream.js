"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,signal:signal,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,commonHeaders:headers,getBaseUrl:getBaseUrl}=providerContext,html=(yield axios.get(link,{headers:headers,signal:signal})).data,$=cheerio.load(html),Streams=[],baseUrl=yield getBaseUrl("moviezwap"),downloadLinks=[];$('a[href*="/dwload.php?file="]').each((i,el)=>{const href=$(el).attr("href"),text=$(el).text().trim();if(href&&text){const qualityMatch=text.match(/(\d+)p/i);let quality;if(qualityMatch){const qualityNum=parseInt(qualityMatch[1]);qualityNum<=360?quality="360":qualityNum<=480?quality="480":qualityNum<=720?quality="720":qualityNum<=1080?quality="1080":qualityNum<=2160&&(quality="2160")}const downloadUrl=href.replace("/dwload.php?","/download.php?"),fullDownloadUrl=downloadUrl.startsWith("http")?downloadUrl:`${baseUrl}${downloadUrl}`;downloadLinks.push({url:fullDownloadUrl,quality:quality,text:text})}});for(const downloadLink of downloadLinks)try{const downloadPageRes=yield axios.get(downloadLink.url,{headers:Object.assign(Object.assign({},headers),{Referer:baseUrl}),signal:signal,timeout:1e4}),$downloadPage=cheerio.load(downloadPageRes.data);let directDownloadUrl=null;$downloadPage('a:contains("Fast Download Server"), button:contains("Fast Download Server")').each((i,el)=>{const href=$downloadPage(el).attr("href");href&&(href.includes(".mp4")||href.includes("moviezzwaphd.xyz"))&&(directDownloadUrl=href)}),directDownloadUrl||$downloadPage('[onclick*="window.location"], [onclick*="location.href"]').each((i,el)=>{const onclick=$downloadPage(el).attr("onclick");if(onclick){const urlMatch=onclick.match(/['"](https?:\/\/[^'"]*\.mp4[^'"]*)['"]/);urlMatch&&(directDownloadUrl=urlMatch[1])}}),directDownloadUrl||$downloadPage('a[href*=".mp4"], a[href*="moviezzwaphd.xyz"]').each((i,el)=>{const href=$downloadPage(el).attr("href");href&&href.includes(".mp4")&&(directDownloadUrl=href)}),directDownloadUrl&&Streams.push({link:directDownloadUrl,type:"mp4",server:"MoviezWap",quality:downloadLink.quality,headers:Object.assign(Object.assign({},headers),{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",Referer:baseUrl})})}catch(error){console.error(`Error processing download link ${downloadLink.url}:`,error instanceof Error?error.message:"Unknown error")}return Streams})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;