"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const WORKER_URL="https://movies4u.steep-bread-3c84.workers.dev";function extractStream(url,extractors,signal){return __awaiter(this,void 0,void 0,function*(){if(!url)return[];if(url.includes(".mp4")||url.includes(".mkv")||url.includes(".avi"))return[{server:"Direct",link:url,type:"mp4",quality:"720"}];if(url.includes("hubcloud")){return(yield extractors.hubcloudExtracter(url,signal))||[]}if(url.includes("gdflix")){return(yield extractors.gdFlixExtracter(url,signal))||[]}if(url.includes("gofile")){const extracted=yield extractors.gofileExtracter(url);return extracted&&extracted.link?[{server:"GoFile",link:extracted.link,type:"mp4",quality:"720"}]:[]}if(url.includes("fastdl")){return(yield extractors.fastdlExtractor(url,signal))||[]}if(url.includes("vcloud")){return(yield extractors.vcloudExtractor(url,signal))||[]}if(url.includes("filepress")){return(yield extractors.filepresExtractor(url,signal))||[]}return url.includes("hubdrive")?[{server:"HubDrive",link:url,type:"mp4",quality:"720"}]:[]})}function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){const{axios:axios,extractors:extractors}=providerContext;try{const{data:data}=yield axios.get(WORKER_URL,{params:{action:"stream",link:link},signal:signal,timeout:3e4});if(!data.success||!Array.isArray(data.streams))return[];const allStreams=[];for(const streamLink of data.streams)try{const url=streamLink.link;if(!url||url.includes("how-to-download")||url.includes("tutorial")||url.includes("gdtot"))continue;if(url.includes("nexdrive")){const extracted=yield extractors.nexdriveExtractor(url,signal);if(extracted&&extracted.length>0)for(const serviceLink of extracted)try{const finalStreams=yield extractStream(serviceLink.link,extractors,signal);finalStreams&&finalStreams.length>0?allStreams.push(...finalStreams):allStreams.push(serviceLink)}catch(err){allStreams.push(serviceLink)}}else{const extracted=yield extractStream(url,extractors,signal);extracted&&extracted.length>0&&allStreams.push(...extracted)}}catch(extractorError){}return allStreams}catch(error){return[]}})}