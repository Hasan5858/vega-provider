"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const WORKER_URL="https://movies4u.steep-bread-3c84.workers.dev";function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){const{axios:axios,extractors:extractors}=providerContext,{hubcloudExtracter:hubcloudExtracter,gdFlixExtracter:gdFlixExtracter,gofileExtracter:gofileExtracter}=extractors;try{const{data:data}=yield axios.get(WORKER_URL,{params:{action:"stream",link:link},signal:signal,timeout:3e4});if(!data.success||!Array.isArray(data.streams))return[];const allStreams=[];for(const streamLink of data.streams)try{const url=streamLink.link;if(!url||url.includes("how-to-download")||url.includes("tutorial")||url.includes("gdtot"))continue;if(url.includes(".mp4")||url.includes(".mkv")||url.includes(".avi")){allStreams.push({server:"Direct",link:url,type:streamLink.type||"mp4",quality:streamLink.quality});continue}if(url.includes("hubcloud")){const extracted=yield hubcloudExtracter(url,signal);extracted&&extracted.length>0&&allStreams.push(...extracted)}else if(url.includes("gdflix")){const extracted=yield gdFlixExtracter(url,signal);extracted&&extracted.length>0&&allStreams.push(...extracted)}else if(url.includes("gofile")){const extracted=yield gofileExtracter(url);extracted&&extracted.link&&allStreams.push({server:"GoFile",link:extracted.link,type:"mp4"})}else url.includes("nexdrive")?allStreams.push({server:streamLink.server||"NexDrive",link:url,type:streamLink.type||"mp4",quality:streamLink.quality}):url.includes("hubdrive")?allStreams.push({server:streamLink.server||"HubDrive",link:url,type:streamLink.type||"mp4",quality:streamLink.quality}):allStreams.push({server:streamLink.server||"Unknown",link:url,type:streamLink.type||"mp4",quality:streamLink.quality})}catch(extractorError){}return allStreams}catch(error){return[]}})}