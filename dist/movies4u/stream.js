"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(){var ownKeys=function(o){return ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)Object.prototype.hasOwnProperty.call(o,k)&&(ar[ar.length]=k);return ar},ownKeys(o)};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k=ownKeys(mod),i=0;i<k.length;i++)"default"!==k[i]&&__createBinding(result,mod,k[i]);return __setModuleDefault(result,mod),result}}(),__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const cheerio=__importStar(require("cheerio")),WORKER_URL="https://movies4u.steep-bread-3c84.workers.dev";function parseQuality(qualityStr){return qualityStr?qualityStr.includes("1080")||qualityStr.includes("4k")||qualityStr.includes("4K")?"1080":qualityStr.includes("2160")?"2160":qualityStr.includes("720")?"720":qualityStr.includes("480")?"480":qualityStr.includes("360")?"360":"720":"720"}function extractStream(url,extractors,signal,quality){return __awaiter(this,void 0,void 0,function*(){if(!url)return[];const parsedQuality=parseQuality(quality||"");if(url.includes(".mp4")||url.includes(".mkv")||url.includes(".avi"))return[{server:"Direct",link:url,type:"mp4",quality:parsedQuality}];if(url.includes("hubcloud")){const extracted=yield extractors.hubcloudExtracter(url,signal);return(null==extracted?void 0:extracted.map(s=>Object.assign(Object.assign({},s),{server:s.server||"HubCloud",quality:parsedQuality||s.quality})))||[]}if(url.includes("gdflix")){const extracted=yield extractors.gdFlixExtracter(url,signal);return(null==extracted?void 0:extracted.map(s=>Object.assign(Object.assign({},s),{server:s.server||"GDFlix",quality:parsedQuality||s.quality})))||[]}if(url.includes("gofile")){const extracted=yield extractors.gofileExtracter(url);return extracted&&extracted.link?[{server:"GoFile",link:extracted.link,type:"mp4",quality:parsedQuality}]:[]}if(url.includes("fastdl")){const extracted=yield extractors.fastdlExtractor(url,signal);return(null==extracted?void 0:extracted.map(s=>Object.assign(Object.assign({},s),{server:s.server||"FastDL",quality:parsedQuality||s.quality})))||[]}if(url.includes("vcloud")){const extracted=yield extractors.vcloudExtractor(url,signal);return(null==extracted?void 0:extracted.map(s=>Object.assign(Object.assign({},s),{server:s.server||"VCloud",quality:parsedQuality||s.quality})))||[]}if(url.includes("filepress")){const extracted=yield extractors.filepresExtractor(url,signal);return(null==extracted?void 0:extracted.map(s=>Object.assign(Object.assign({},s),{server:s.server||"FilePres",quality:parsedQuality||s.quality})))||[]}return url.includes("hubdrive")?[{server:"HubDrive",link:url,type:"mp4",quality:parsedQuality}]:[]})}function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){const{axios:axios,extractors:extractors}=providerContext;try{const html=(yield axios.get(link,{signal:signal,timeout:3e4,headers:{"User-Agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"}})).data,$=cheerio.load(html),streamLinks=[];$("a[href]").each((_,elem)=>{const $link=$(elem),href=$link.attr("href"),text=$link.text().trim(),hasDownloadBtn=$link.find("button.dwd-button").length>0,hasQuality=/\d+p/.test(text);if(href&&(hasDownloadBtn||hasQuality)&&!(href.includes("javascript")||href.startsWith("#")||href.includes("facebook")||href.includes("twitter"))){let quality="720p";text.includes("1080")?quality="1080p":text.includes("720")?quality="720p":text.includes("480")?quality="480p":text.includes("360")&&(quality="360p");let server="Unknown";href.includes("hubcloud")?server="HubCloud":href.includes("gdflix")?server="GDFlix":href.includes("filepress")?server="FilePress":href.includes("gofile")?server="GoFile":href.includes("nexdrive")?server="NexDrive":href.includes("hubdrive")?server="HubDrive":href.includes("mega")?server="Mega":href.includes("dropbox")?server="Dropbox":href.includes("fastdl")?server="FastDL":href.includes("vcloud")&&(server="VCloud"),streamLinks.push({link:href,server:server,quality:quality})}});const allStreams=[];for(const streamLink of streamLinks)try{const url=streamLink.link,qualityFromPage=(streamLink.server,streamLink.quality||"720p");if(!url||url.includes("how-to-download")||url.includes("tutorial")||url.includes("gdtot"))continue;if(url.includes("nexdrive")){const extracted=yield extractors.nexdriveExtractor(url,signal);if(extracted&&extracted.length>0)for(const serviceLink of extracted)try{serviceLink.server;const finalStreams=yield extractStream(serviceLink.link,extractors,signal,qualityFromPage);finalStreams&&finalStreams.length>0?allStreams.push(...finalStreams):allStreams.push(Object.assign(Object.assign({},serviceLink),{quality:parseQuality(qualityFromPage)}))}catch(err){allStreams.push(Object.assign(Object.assign({},serviceLink),{quality:parseQuality(qualityFromPage)}))}}else{const extracted=yield extractStream(url,extractors,signal,qualityFromPage);extracted&&extracted.length>0&&allStreams.push(...extracted)}}catch(extractorError){}return allStreams}catch(error){return[]}})}