"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function extractKmhdLink(katlink,providerContext){return __awaiter(this,void 0,void 0,function*(){const{axios:axios}=providerContext;try{const data=(yield axios.get(katlink)).data,uploadLinksMatch=data.match(/upload_links:\s*{[^}]*?hubdrive_res:"([^"]+)"/);if(!uploadLinksMatch||!uploadLinksMatch[1])return null;const hubdriveId=uploadLinksMatch[1],linksMatch=data.match(/hubdrive_res:\s*{[^}]*?link:\s*"([^"]+)"/);if(!linksMatch||!linksMatch[1])return null;const hubdriveBaseUrl=linksMatch[1];return hubdriveBaseUrl+hubdriveId}catch(error){return null}})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=void 0;const getStream=function(_a){return __awaiter(this,arguments,void 0,function*({link:link,signal:signal,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,extractors:extractors}=providerContext,{hubcloudExtracter:hubcloudExtracter,gdFlixExtracter:gdFlixExtracter}=extractors;try{if(link.includes("gdflix"))return yield gdFlixExtracter(link,signal);if(link.includes("kmhd")){const hubcloudLink=yield extractKmhdLink(link,providerContext);return hubcloudLink?yield hubcloudExtracter(hubcloudLink,signal):[]}return yield hubcloudExtracter(link,signal)}catch(error){return[]}})};exports.getStream=getStream;