"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","Cache-Control":"no-store","Accept-Language":"en-US,en;q=0.9",DNT:"1","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"};function getServerName(url){return url.includes("gofile.io")?"GoFile":url.includes("send.cm")?"Send":url.includes("gdflix")?"GDFlix":url.includes("filepress")?"FilePress":url.includes("gdtot")?"GDTot":url.includes("pixeldrain")?"PixelDrain":url.includes("hubcloud")?"HubCloud":url.includes("1fichier")?"1fichier":url.includes("mega.nz")?"Mega":url.includes("drive.google")?"Google Drive":"Unknown"}function getFileType(url,server){const extension=url.match(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v)$/i);if(extension)return extension[1].toLowerCase();return{GoFile:"mkv",Send:"mkv",GDFlix:"mkv",FilePress:"mkv",GDTot:"mkv",PixelDrain:"mp4",HubCloud:"mkv","1fichier":"mkv",Mega:"mkv","Google Drive":"mkv"}[server]||"mkv"}function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,extractors:extractors}=providerContext,{hubcloudExtracter:hubcloudExtracter}=extractors;try{const streamLinks=[],response=yield axios.get(link,{headers:headers}),$=cheerio.load(response.data),cloudSelectors=["a[href*='gofile.io']","a[href*='send.cm']","a[href*='gdflix']","a[href*='filepress']","a[href*='gdtot']","a[href*='pixeldrain.dev']","a[href*='hubcloud']","a[href*='1fichier.com']","a[href*='mega.nz']","a[href*='drive.google.com']"].join(", ");if($(cloudSelectors).each((_,el)=>{var _a;const href=null===(_a=$(el).attr("href"))||void 0===_a?void 0:_a.trim();$(el).text().trim();if(href){const server=getServerName(href),fileType=getFileType(href,server);streamLinks.push({server:server,link:href,type:fileType,quality:"1080"})}}),0===streamLinks.length)try{const hubcloudStreams=yield hubcloudExtracter(link,signal);streamLinks.push(...hubcloudStreams)}catch(hubcloudError){}return streamLinks.filter((stream,index,self)=>index===self.findIndex(s=>s.link===stream.link))}catch(error){return[]}})}