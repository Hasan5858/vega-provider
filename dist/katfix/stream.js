"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","Cache-Control":"no-store","Accept-Language":"en-US,en;q=0.9",DNT:"1","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"};function getServerName(url){return url.includes("gofile.io")?"GoFile":url.includes("send.cm")?"Send":url.includes("gdflix")?"GDFlix":url.includes("filepress")?"FilePress":url.includes("gdtot")?"GDTot":url.includes("pixeldrain")?"PixelDrain":url.includes("hubcloud")?"HubCloud":url.includes("1fichier")?"1fichier":url.includes("mega.nz")?"Mega":url.includes("drive.google")?"Google Drive":"Unknown"}function getFileType(url,server){const extension=url.match(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v)$/i);if(extension)return extension[1].toLowerCase();return{GoFile:"mkv",Send:"mkv",GDFlix:"mkv",FilePress:"mkv",GDTot:"mkv",PixelDrain:"mp4",HubCloud:"mkv","1fichier":"mkv",Mega:"mkv","Google Drive":"mkv"}[server]||"mkv"}function extractDirectVideoUrl(link,server,axios,cheerio){return __awaiter(this,void 0,void 0,function*(){var _a,_b;try{"undefined"!=typeof window&&window.console&&window.console.log(`🔍 DEBUG - Extracting direct URL from ${server}: ${link}`),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Extracting direct URL from ${server}: ${link}\n`);const response=yield axios.get(link,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"},maxRedirects:5,timeout:1e4}),finalUrl=(null===(_a=response.request)||void 0===_a?void 0:_a.responseURL)||(null===(_b=response.config)||void 0===_b?void 0:_b.url)||link;if("undefined"!=typeof window&&window.console&&window.console.log(`🔍 DEBUG - Final URL for ${server}: ${finalUrl}`),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Final URL for ${server}: ${finalUrl}\n`),finalUrl.includes("fastcdn-dl.pages.dev"))try{const urlMatch=finalUrl.match(/[?&]url=([^&]+)/);if(urlMatch&&urlMatch[1]){const encodedUrl=urlMatch[1],decodedUrl=decodeURIComponent(encodedUrl);if(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v|m3u8)$/i.test(decodedUrl))return[{server:server,link:decodedUrl,type:getFileType(decodedUrl,server),quality:"1080"}]}}catch(error){}if(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v|m3u8)$/i.test(finalUrl))return[{server:server,link:finalUrl,type:getFileType(finalUrl,server),quality:"1080"}];const $=cheerio.load(response.data),videoLinks=[],videoSelectors=['a[href*=".mp4"]','a[href*=".mkv"]','a[href*=".avi"]','a[href*=".mov"]','a[href*=".webm"]','a[href*=".m4v"]','a[href*=".m3u8"]'].join(", ");$(videoSelectors).each((_,el)=>{var _a;const href=null===(_a=$(el).attr("href"))||void 0===_a?void 0:_a.trim();$(el).text().trim();if(href){const fullUrl=href.startsWith("http")?href:new URL(href,finalUrl).href;if(fullUrl.includes("fastcdn-dl.pages.dev"))try{const urlMatch=fullUrl.match(/[?&]url=([^&]+)/);if(urlMatch&&urlMatch[1]){const encodedUrl=urlMatch[1],decodedUrl=decodeURIComponent(encodedUrl);if(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v|m3u8)$/i.test(decodedUrl))return void videoLinks.push({server:server,link:decodedUrl,type:getFileType(decodedUrl,server),quality:"1080"})}}catch(error){}videoLinks.push({server:server,link:fullUrl,type:getFileType(fullUrl,server),quality:"1080"})}});const videoUrlPattern=/https?:\/\/[^\s"']+\.(mp4|mkv|avi|mov|webm|m4v|m3u8)(\?[^\s"']*)?/gi,matches=response.data.match(videoUrlPattern);return matches&&matches.forEach(match=>{videoLinks.push({server:server,link:match,type:getFileType(match,server),quality:"1080"})}),videoLinks.length>0?("undefined"!=typeof window&&window.console&&(window.console.log(`🔍 DEBUG - Found ${videoLinks.length} video links in HTML`),videoLinks.forEach((link,i)=>{window.console.log(`  ${i+1}. ${link.link}`)})),"undefined"!=typeof process&&process.stdout&&(process.stdout.write(`🔍 DEBUG - Found ${videoLinks.length} video links in HTML\n`),videoLinks.forEach((link,i)=>{process.stdout.write(`  ${i+1}. ${link.link}\n`)})),videoLinks):[{server:server,link:link,type:getFileType(link,server),quality:"1080"}]}catch(error){return[{server:server,link:link,type:getFileType(link,server),quality:"1080"}]}})}function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){var _b;const{axios:axios,cheerio:cheerio,extractors:extractors}=providerContext,{gofileExtracter:gofileExtracter,gdFlixExtracter:gdFlixExtracter}=extractors;try{const streamLinks=[],response=yield axios.get(link,{headers:headers,signal:signal,timeout:1e4}),$=cheerio.load(response.data),cloudSelectors=["a[href*='gofile.io']","a[href*='gdflix']","a[href*='gdtot']","a[href*='hubcloud']","a[href*='pixeldrain']","a[href*='send.cm']","a[href*='1fichier']","a[href*='mega.nz']","a[href*='drive.google']"].join(", ");$(cloudSelectors).each((_,el)=>{var _a;const href=null===(_a=$(el).attr("href"))||void 0===_a?void 0:_a.trim(),text=$(el).text().trim();if(!href||!text)return;if(/(imdb|rating|score|share|telegram|whatsapp|how to)/i.test(text))return;if(text.length<2)return;const server=getServerName(href),fileType=getFileType(href,server);let quality="1080";const qualityMatch=text.match(/(\d+)p/i);if(qualityMatch){const q=parseInt(qualityMatch[1]);quality=q<=360?"360":q<=480?"480":q<=720?"720":q<=1080?"1080":"2160"}streamLinks.push({server:`${server} [${quality}p]`,link:href,type:fileType,quality:quality})});const finalStreams=[];for(const stream of streamLinks){try{if(stream.link.includes("gofile.io")){const gofileId=null===(_b=stream.link.split("/d/")[1])||void 0===_b?void 0:_b.split("?")[0];if(gofileId){const result=yield gofileExtracter(gofileId);if(null==result?void 0:result.link){finalStreams.push({server:stream.server,link:result.link,type:stream.type,quality:stream.quality});continue}}}else if(stream.link.includes("gdflix")){const results=yield gdFlixExtracter(stream.link,signal);if((null==results?void 0:results.length)>0){results.forEach(r=>{finalStreams.push({server:stream.server,link:r.link,type:stream.type,quality:stream.quality})});continue}}}catch(e){}finalStreams.push(stream)}return finalStreams.filter((s,i,arr)=>i===arr.findIndex(t=>t.link===s.link))}catch(error){return[]}})}