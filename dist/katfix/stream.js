"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","Cache-Control":"no-store","Accept-Language":"en-US,en;q=0.9",DNT:"1","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"};function getServerName(url){return url.includes("gofile.io")?"GoFile":url.includes("send.cm")?"Send":url.includes("gdflix")?"GDFlix":url.includes("filepress")?"FilePress":url.includes("gdtot")?"GDTot":url.includes("pixeldrain")?"PixelDrain":url.includes("hubcloud")?"HubCloud":url.includes("1fichier")?"1fichier":url.includes("mega.nz")?"Mega":url.includes("drive.google")?"Google Drive":"Unknown"}function getFileType(url,server){const extension=url.match(/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v)$/i);if(extension)return extension[1].toLowerCase();return{GoFile:"mkv",Send:"mkv",GDFlix:"mkv",FilePress:"mkv",GDTot:"mkv",PixelDrain:"mp4",HubCloud:"mkv","1fichier":"mkv",Mega:"mkv","Google Drive":"mkv"}[server]||"mkv"}function extractDirectVideoUrl(link,server,axios){return __awaiter(this,void 0,void 0,function*(){var _a,_b;try{"undefined"!=typeof window&&window.console&&window.console.log(`🔍 DEBUG - Extracting direct URL from ${server}: ${link}`),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Extracting direct URL from ${server}: ${link}\n`);const response=yield axios.get(link,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"},maxRedirects:5,timeout:1e4}),finalUrl=(null===(_a=response.request)||void 0===_a?void 0:_a.responseURL)||(null===(_b=response.config)||void 0===_b?void 0:_b.url)||link;"undefined"!=typeof window&&window.console&&window.console.log(`🔍 DEBUG - Final URL for ${server}: ${finalUrl}`),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Final URL for ${server}: ${finalUrl}\n`);return/\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v|m3u8)$/i.test(finalUrl)?[{server:server,link:finalUrl,type:getFileType(finalUrl,server),quality:"1080"}]:[{server:server,link:link,type:getFileType(link,server),quality:"1080"}]}catch(error){return"undefined"!=typeof window&&window.console&&window.console.log(`🔍 DEBUG - Extraction failed for ${server}: ${error.message}`),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Extraction failed for ${server}: ${error.message}\n`),[{server:server,link:link,type:getFileType(link,server),quality:"1080"}]}})}function getStream(_a){return __awaiter(this,arguments,void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){var _b,_c,_d,_e;const{axios:axios,cheerio:cheerio,extractors:extractors}=providerContext,{hubcloudExtracter:hubcloudExtracter}=extractors;try{"undefined"!=typeof window&&window.console&&window.console.log("🔍 DEBUG - Stream link received:",link),"undefined"!=typeof process&&process.stdout&&process.stdout.write(`🔍 DEBUG - Stream link received: ${link}\n`);const streamLinks=[],response=yield axios.get(link,{headers:headers});"undefined"!=typeof window&&window.console&&(window.console.log("🔍 DEBUG - Response status:",response.status),window.console.log("🔍 DEBUG - Response URL:",(null===(_b=response.request)||void 0===_b?void 0:_b.responseURL)||(null===(_c=response.config)||void 0===_c?void 0:_c.url)),window.console.log("🔍 DEBUG - Response data length:",response.data?response.data.length:"no data")),"undefined"!=typeof process&&process.stdout&&(process.stdout.write(`🔍 DEBUG - Response status: ${response.status}\n`),process.stdout.write(`🔍 DEBUG - Response URL: ${(null===(_d=response.request)||void 0===_d?void 0:_d.responseURL)||(null===(_e=response.config)||void 0===_e?void 0:_e.url)}\n`),process.stdout.write(`🔍 DEBUG - Response data length: ${response.data?response.data.length:"no data"}\n`));const $=cheerio.load(response.data),cloudSelectors=["a[href*='gofile.io']","a[href*='send.cm']","a[href*='gdflix']","a[href*='filepress']","a[href*='gdtot']","a[href*='pixeldrain.dev']","a[href*='hubcloud']","a[href*='1fichier.com']","a[href*='mega.nz']","a[href*='drive.google.com']"].join(", ");if("undefined"!=typeof window&&window.console&&(window.console.log("🔍 DEBUG - Testing cloud selectors:"),cloudSelectors.split(",").forEach(selector=>{const count=$(selector).length;window.console.log(`  ${selector}: ${count} elements`)})),"undefined"!=typeof process&&process.stdout&&(process.stdout.write("🔍 DEBUG - Testing cloud selectors:\n"),cloudSelectors.split(",").forEach(selector=>{const count=$(selector).length;process.stdout.write(`  ${selector}: ${count} elements\n`)})),$(cloudSelectors).each((_,el)=>{var _a;const href=null===(_a=$(el).attr("href"))||void 0===_a?void 0:_a.trim();$(el).text().trim();if(href){const server=getServerName(href),fileType=getFileType(href,server);streamLinks.push({server:server,link:href,type:fileType,quality:"1080"})}}),streamLinks.length>0){const directStreams=[];for(const stream of streamLinks)try{const directLinks=yield extractDirectVideoUrl(stream.link,stream.server,axios);directStreams.push(...directLinks)}catch(error){try{const hubcloudLinks=yield hubcloudExtracter(stream.link,signal);directStreams.push(...hubcloudLinks)}catch(hubcloudError){directStreams.push(stream)}}streamLinks.length=0,streamLinks.push(...directStreams)}else try{const hubcloudStreams=yield hubcloudExtracter(link,signal);streamLinks.push(...hubcloudStreams)}catch(hubcloudError){}const uniqueStreams=streamLinks.filter((stream,index,self)=>index===self.findIndex(s=>s.link===stream.link));return"undefined"!=typeof window&&window.console&&(window.console.log("🔍 DEBUG - Final stream links found:",uniqueStreams.length),window.console.log("🔍 DEBUG - Sample streams:",uniqueStreams.slice(0,3).map(s=>({server:s.server,link:s.link})))),"undefined"!=typeof process&&process.stdout&&(process.stdout.write(`🔍 DEBUG - Final stream links found: ${uniqueStreams.length}\n`),process.stdout.write(`🔍 DEBUG - Sample streams: ${JSON.stringify(uniqueStreams.slice(0,3).map(s=>({server:s.server,link:s.link})))}\n`)),uniqueStreams}catch(error){return[]}})}