"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=void 0;const getStream=function(_a){return __awaiter(this,arguments,void 0,function*({link:link,signal:signal,providerContext:providerContext}){try{const url=link.replace("filmyfly.deals","filmyfly.observer"),data=(yield providerContext.axios.get(url,{signal:signal})).data,$=providerContext.cheerio.load(data),streams=[];if(url.includes("linkmake.in"))try{const linkmakeData=(yield providerContext.axios.get(url,{signal:signal})).data,linkmake$=providerContext.cheerio.load(linkmakeData),qualityPromises=[];return linkmake$("a").each((i,element)=>{const qualityText=linkmake$(element).text().trim(),qualityLink=linkmake$(element).attr("href");if(qualityText&&qualityText.includes("Download")&&qualityLink&&qualityLink.includes("filesdl")){const fullLink=qualityLink.startsWith("http")?qualityLink:`https://linkmake.in${qualityLink}`,promise=(()=>__awaiter(this,void 0,void 0,function*(){try{const serverData=(yield providerContext.axios.get(fullLink,{signal:signal})).data,server$=providerContext.cheerio.load(serverData),serverPromises=[];server$("a[href], button[onclick]").each((j,serverElement)=>{const serverText=server$(serverElement).text().trim(),serverLink=server$(serverElement).attr("href")||server$(serverElement).attr("onclick");if(serverText&&serverLink){const finalLink=serverLink.startsWith("http")?serverLink:serverLink.startsWith("/")?`https://${new URL(fullLink).hostname}${serverLink}`:fullLink,promise=(()=>__awaiter(this,void 0,void 0,function*(){try{if(serverText.toLowerCase().includes("fast cloud")||serverText.toLowerCase().includes("aws"))streams.push({server:`${qualityText} - ${serverText}`,link:finalLink,type:"mkv"});else if(serverText.toLowerCase().includes("gofile")){const gofileId=finalLink.split("/").pop();if(gofileId){const gofileResult=yield providerContext.extractors.gofileExtracter(gofileId);gofileResult.link&&streams.push({server:`${qualityText} - GoFile`,link:gofileResult.link,type:"mkv"})}}else if(serverText.toLowerCase().includes("gdflix")){(yield providerContext.extractors.gdFlixExtracter(finalLink,signal)).forEach(stream=>{streams.push({server:`${qualityText} - ${stream.server}`,link:stream.link,type:stream.type})})}else if(serverText.toLowerCase().includes("ultra fastdl")||serverText.toLowerCase().includes("fastdl")){(yield providerContext.extractors.hubcloudExtracter(finalLink,signal)).forEach(stream=>{streams.push({server:`${qualityText} - ${stream.server}`,link:stream.link,type:stream.type})})}else if(serverText.toLowerCase().includes("direct download")||serverText.toLowerCase().includes("fast cloud-02")){(yield providerContext.extractors.hubcloudExtracter(finalLink,signal)).forEach(stream=>{streams.push({server:`${qualityText} - ${stream.server}`,link:stream.link,type:stream.type})})}}catch(extractorError){streams.push({server:`${qualityText} - ${serverText}`,link:finalLink,type:"mkv"})}}))();serverPromises.push(promise)}}),yield Promise.all(serverPromises)}catch(serverError){streams.push({server:qualityText,link:fullLink,type:"mkv"})}}))();qualityPromises.push(promise)}}),yield Promise.all(qualityPromises),0===streams.length&&linkmake$("a").each((i,element)=>{const linkText=linkmake$(element).text().trim(),linkHref=linkmake$(element).attr("href");linkText.toLowerCase().includes("download")&&linkHref&&!linkHref.includes("javascript:")&&streams.push({server:linkText,link:linkHref.startsWith("http")?linkHref:`https://linkmake.in${linkHref}`,type:"mkv"})}),streams}catch(linkmakeError){return streams.push({server:"Direct Download",link:url,type:"mkv"}),streams}const promises=$(".dlbtn a, .button2,.button1,.button3,.button4,.button").toArray().map(element=>__awaiter(this,void 0,void 0,function*(){const title=$(element).text();let link=$(element).attr("href");if(title.includes("GDFLIX")&&link){const gdLinks=yield providerContext.extractors.gdFlixExtracter(link,signal);streams.push(...gdLinks)}const alreadyAdded=streams.find(s=>s.link===link);!title||!link||title.includes("Watch")||title.includes("Login")||title.includes("GoFile")||alreadyAdded||streams.push({server:title,link:link,type:"mkv"})}));return yield Promise.all(promises),streams}catch(err){return[]}})};exports.getStream=getStream;